version: '3.9'

services:
  api:
    build: ./backend
    expose:
      - "80"
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - db
    # Добавьте эти строки для обхода проблем с потоками и seccomp:
    security_opt:
      - seccomp:unconfined
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535

  db:
    image: postgres:13.2
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 1s
      retries: 20
    env_file:
      - ./backend/.env

  alembic:
    build: ./backend
    entrypoint: [ "alembic" ]
    command: [ "upgrade", "head" ]
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    # Добавьте эти строки и для alembic, если он тоже использует pip:
    security_opt:
      - seccomp:unconfined
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
